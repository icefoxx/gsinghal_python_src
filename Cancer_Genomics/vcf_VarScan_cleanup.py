#-------------------------------------------------------------------------------
# Name:        module1
# Purpose:
#
# Author:      Gaurav Singhal
#
# Created:     26/09/2012
# Copyright:   (c) Gaurav Singhal 2012
# Licence:     This work is licensed under the Creative Commons Attribution-NonCommercial 3.0 Unported License.
#              To view a copy of this license, visit http://creativecommons.org/licenses/by-nc/3.0/.
#-------------------------------------------------------------------------------

import sys

'''
The vcf file generated by VarScan has many INFO, FILTER and FORMAT tags. However, I will use only some of the tags from VarScan output. The tags
I will use are :

##FILTER=<ID=str10,Description="Less than 10% or more than 90% of variant supporting reads on one strand">
##FILTER=<ID=indelError,Description="Likely artifact due to indel reads at this position">

##FORMAT=<ID=DP,Number=1,Type=Integer,Description="Quality Read Depth of bases with Phred score >= 15">
##FORMAT=<ID=AF,Number=1,Type=String,Description="Variant allele frequency (Depth of variant-supporting bases (Phred score >=15) / Total depth (Phred score >=15))">
##FORMAT=<ID=PVAL,Number=1,Type=String,Description="P-value from Fisher's Exact Test">

Here the allele frequency is calculated as : depth of variant-supporting bases (with Phred score >=15) / total depth (with bases with Phred quality >=15)
Put simply, we ignore the bases whose qualities are less than 15.
'''

def varScan_vcf_cleanup(fileName):
    fh = open(fileName, 'rU')
    data = fh.readlines()
    fh.close()

    fhoutName = fileName[:-4] + '_clean.vcf'
    fhout = open(fhoutName, 'w')

    fhout.write(data[0])
    fhout.write(data[1])

    fhout.write('''##INFO=<ID=DP,Number=1,Type=Integer,Description="Quality Read Depth of bases with Phred score >= 15">  \n''')
    fhout.write('''##INFO=<ID=AF,Number=A,Type=Float,Description="Allele Frequency (Depth of variant-supporting bases (Phred score >=15) / Total depth (Phred score >=15))"> \n''')
    fhout.write('''##INFO=<ID=PVAL,Number=1,Type=String,Description="P-value from Fisher's Exact Test">  \n''')
    outline = '#CHROM' + '\t'+ 'POS' +  '\t' +  'ID' + '\t' + 'REF' + '\t' + 'ALT' +  '\t' +  'QUAL'+  '\t' +  'FILTER'+  '\t' +  'INFO' + '\n'
    fhout.write(outline)



    for line in data[24:]:
        flds = line.split('\t')
        chrom = flds[0][3:]
        infotags = flds[9].split(':')
        info = 'DP=' + infotags[3] + ';AF=' + infotags[6][:-1] + ';PVAL=' + infotags[7]
        outline = chrom + '\t' + flds[1] + '\t' + flds[2] + '\t' + flds[3] + '\t' + flds[4] + '\t' + flds[5] + '\t' + flds[6] + '\t' + info + '\n'
        fhout.write(outline)
    fhout.close()



    del data


def main():
    fileName = sys.argv[1]
    varScan_vcf_cleanup(fileName)

if __name__ == '__main__':
    main()
